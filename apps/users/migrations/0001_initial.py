# Generated by Django 2.2.5 on 2020-04-14 13:45

import apps.users.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import utils.image_upload


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=150, verbose_name='имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='фамилия')),
                ('middle_name', models.CharField(max_length=150, verbose_name='отчество')),
                ('phone', models.CharField(max_length=17, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='номер телефона')),
                ('photo', models.ImageField(null=True, upload_to=utils.image_upload.upload_instance_image, verbose_name='фото')),
                ('is_active', models.BooleanField(default=True, verbose_name='активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='сотрудник')),
                ('is_doctor', models.BooleanField(default=False, verbose_name='доктор')),
                ('is_patient', models.BooleanField(default=False, verbose_name='пациент')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', apps.users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Доктор',
                'verbose_name_plural': 'Доктора',
            },
        ),
        migrations.CreateModel(
            name='DoctorPosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название')),
            ],
            options={
                'verbose_name': 'должность доктора',
                'verbose_name_plural': 'должности докторов',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, null=True, verbose_name='адрес')),
                ('date_of_birth', models.DateField(verbose_name='дата рождения')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient', to='users.Doctor', verbose_name='доктор')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='patient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
        migrations.CreateModel(
            name='PatientIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dyspnea', models.PositiveSmallIntegerField(choices=[(1, '- нет'), (2, '+ при нагрузке'), (3, '++ в покое')], default=1, verbose_name='одышка')),
                ('position_bed', models.PositiveSmallIntegerField(choices=[(1, '- горизонтально'), (2, '+ высоко на 2х подушках'), (3, '++ сидя')], default=1, verbose_name='положение в постели')),
                ('heartbeat', models.PositiveSmallIntegerField(choices=[(1, '- нет'), (2, '+ при нагрузке'), (3, '++ в покое')], default=1, verbose_name='сердцебиение')),
                ('stack', models.PositiveSmallIntegerField(choices=[(1, '- стопы'), (2, '+ голени'), (3, '++ выше колени')], default=1, verbose_name='стеки в ноге')),
                ('weight', models.PositiveSmallIntegerField(verbose_name='вес (кг)')),
                ('ad', models.PositiveSmallIntegerField(verbose_name='АД')),
                ('hhs', models.PositiveSmallIntegerField(verbose_name='пульс')),
                ('create_at', models.DateTimeField(auto_now=True, unique=True, verbose_name='дата создания')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='indicator', to='users.Patient')),
            ],
            options={
                'verbose_name': 'анкета пациента',
                'verbose_name_plural': 'анкеты пациентов',
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='positions',
            field=models.ManyToManyField(max_length=255, related_name='positions', to='users.DoctorPosition', verbose_name='должность'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='doctor', to=settings.AUTH_USER_MODEL),
        ),
    ]
